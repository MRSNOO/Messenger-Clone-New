[{"D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\PrivateRoute.js":"1","D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\Dashboard.js":"2","D:\\ReactAuthFirebase\\react-auth\\src\\components\\chat\\header\\header.js":"3","D:\\ReactAuthFirebase\\react-auth\\src\\actions\\index.js":"4","D:\\ReactAuthFirebase\\react-auth\\src\\actions\\user.actions.js":"5","D:\\ReactAuthFirebase\\react-auth\\src\\store\\index.js":"6","D:\\ReactAuthFirebase\\react-auth\\src\\actions\\auth.actions.js":"7","D:\\ReactAuthFirebase\\react-auth\\src\\index.js":"8","D:\\ReactAuthFirebase\\react-auth\\src\\components\\contexts\\AuthContext.js":"9","D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\ForgotPassword.js":"10","D:\\ReactAuthFirebase\\react-auth\\src\\reducers\\index.js":"11","D:\\ReactAuthFirebase\\react-auth\\src\\actions\\constants.js":"12","D:\\ReactAuthFirebase\\react-auth\\src\\App.js":"13","D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\Login.js":"14","D:\\ReactAuthFirebase\\react-auth\\src\\components\\chat\\HomePage.js":"15","D:\\ReactAuthFirebase\\react-auth\\src\\reducers\\auth.reducer.js":"16","D:\\ReactAuthFirebase\\react-auth\\src\\components\\todos\\Todo.js":"17","D:\\ReactAuthFirebase\\react-auth\\src\\services\\firebase.js":"18","D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\UpdateProfile.js":"19","D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\Signup.js":"20","D:\\ReactAuthFirebase\\react-auth\\src\\components\\todos\\index.js":"21","D:\\ReactAuthFirebase\\react-auth\\src\\reducers\\user.reducer.js":"22"},{"size":654,"mtime":1606708844866,"results":"23","hashOfConfig":"24"},{"size":10633,"mtime":1608652821660,"results":"25","hashOfConfig":"24"},{"size":2150,"mtime":1608466543629,"results":"26","hashOfConfig":"24"},{"size":62,"mtime":1607005248840,"results":"27","hashOfConfig":"24"},{"size":3736,"mtime":1609072170532,"results":"28","hashOfConfig":"24"},{"size":219,"mtime":1606985572878,"results":"29","hashOfConfig":"24"},{"size":110,"mtime":1606989467204,"results":"30","hashOfConfig":"24"},{"size":642,"mtime":1607007385669,"results":"31","hashOfConfig":"24"},{"size":1518,"mtime":1606993657514,"results":"32","hashOfConfig":"24"},{"size":1784,"mtime":1606709591198,"results":"33","hashOfConfig":"24"},{"size":250,"mtime":1607005912644,"results":"34","hashOfConfig":"24"},{"size":287,"mtime":1608820309398,"results":"35","hashOfConfig":"24"},{"size":1456,"mtime":1608472553062,"results":"36","hashOfConfig":"24"},{"size":2457,"mtime":1607001925780,"results":"37","hashOfConfig":"24"},{"size":23873,"mtime":1609123628254,"results":"38","hashOfConfig":"24"},{"size":1409,"mtime":1607005468576,"results":"39","hashOfConfig":"24"},{"size":1672,"mtime":1606756586159,"results":"40","hashOfConfig":"24"},{"size":650,"mtime":1608648286455,"results":"41","hashOfConfig":"24"},{"size":2831,"mtime":1606710527163,"results":"42","hashOfConfig":"24"},{"size":3760,"mtime":1608649278842,"results":"43","hashOfConfig":"24"},{"size":1990,"mtime":1606756362572,"results":"44","hashOfConfig":"24"},{"size":1108,"mtime":1609072174995,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6lfylo",{"filePath":"49","messages":"50","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\PrivateRoute.js",[],["108","109"],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\Dashboard.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Alert, Button, Card } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport Header from '../chat/header/header';\r\nimport { db, storage } from '../../services/firebase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee, faReply } from '@fortawesome/free-solid-svg-icons'\r\nimport firebase from \"firebase\"\r\nimport \"./Dashboard.css\"\r\n\r\nconst User = (props) => {\r\n  const { id, user, docId } = props\r\n  const [pendingFriends, setPendingFriends] = useState([])\r\n  const [sentFriendRequests, setSentFriendRequests] = useState([])\r\n  const [pending, setPending] = useState()\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\").doc(docId).get().then((doc) => {\r\n      if (doc) {\r\n        setPendingFriends(doc.data().pendingFriends)\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\").doc(docId).get().then((doc) => {\r\n      if (doc) {\r\n        setSentFriendRequests(doc.data().sentFriendRequests)\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const handleAddFriend = async (id) => {\r\n    setPending(true)\r\n    await db.collection(\"users\").doc(id).update({\r\n      pendingFriends: firebase.firestore.FieldValue.arrayUnion(docId)\r\n    })\r\n    await db.collection(\"users\").doc(docId).update({\r\n      sentFriendRequests: firebase.firestore.FieldValue.arrayUnion(id)\r\n    })\r\n  }\r\n\r\n  const handleAcceptFriend = async (id) => {\r\n    await db.collection(\"users\").doc(docId).update({\r\n      friendList: firebase.firestore.FieldValue.arrayUnion(id)\r\n    })\r\n\r\n    await db.collection(\"users\").doc(id).update({\r\n      friendList: firebase.firestore.FieldValue.arrayUnion(docId)\r\n    })\r\n\r\n    await db.collection(\"users\").doc(id).update({\r\n      pendingFriends: pendingFriends.filter((friendId) => friendId != docId)\r\n    })\r\n\r\n    await db.collection(\"users\").doc(docId).update({\r\n      pendingFriends: pendingFriends.filter((friendId) => friendId != id)\r\n    })\r\n    console.log(\"Accepted\", id)\r\n  }\r\n\r\n  const handleDeclineFriend = async (id) => {\r\n    await db.collection(\"users\").doc(id).update({\r\n      pendingFriends: pendingFriends.filter((friendId) => friendId != docId)\r\n    })\r\n\r\n    await db.collection(\"users\").doc(docId).update({\r\n      pendingFriends: pendingFriends.filter((friendId) => friendId != id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <div className=\"user-card\">\r\n          <div className=\"profile-image\">\r\n          </div>\r\n          <div className=\"name\">\r\n            Name: {user.firstName} {user.lastName}\r\n          </div>\r\n\r\n          <div className=\"email\">\r\n            Email: {user.email}\r\n          </div>\r\n\r\n          <FontAwesomeIcon icon={faReply} />\r\n          {\r\n            sentFriendRequests && sentFriendRequests.includes(id) ?\r\n              (\r\n                <button onClick={() => handleAddFriend(id)} disabled={true}>Pending</button>\r\n              )\r\n              :\r\n              (\r\n                <div>\r\n                  {pendingFriends && pendingFriends.includes(id) ?\r\n                    (\r\n                      <>\r\n                        <button onClick={() => handleAcceptFriend(id)}>Accept</button>\r\n                        <button onClick={() => handleDeclineFriend(id)}>Decline</button>\r\n                      </>\r\n                    )\r\n                    :\r\n                    (\r\n                      <>\r\n                        <button onClick={() => handleAddFriend(id)} disabled={pending}>{pending ? \"Pending\" : \"Add Friend\"}</button>\r\n                      </>\r\n                    )\r\n                  }\r\n                </div>\r\n              )\r\n          }\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst Friend = (props) => {\r\n  const { friendId } = props\r\n  const [friendProfile, setFriendProfile] = useState({})\r\n  useEffect(() => {\r\n    db.collection(\"users\").doc(friendId).get().then((doc) => {\r\n      if (doc) {\r\n        console.log(doc.data())\r\n        setFriendProfile(doc.data())\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <div className=\"user-card\">\r\n          <div className=\"profile-image\">\r\n          </div>\r\n          <div className=\"name\">\r\n            Name: {friendProfile.firstName} {friendProfile.lastName}\r\n          </div>\r\n\r\n          <div className=\"email\">\r\n            Email: {friendProfile.email}\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const [docId, setDocId] = useState() //current User Firebase document id\r\n  const [invalidate, setInvalidate] = useState(true)\r\n  const [userList, setUserList] = useState([])\r\n  const [invalidate2, setInvalidate2] = useState(true)\r\n  const [invalidate3, setInvalidate3] = useState(true)\r\n  const [invalidate4, setInvalidate4] = useState(true)\r\n  const [listPendingFriends, setListPendingFriends] = useState([])\r\n  const [friendList, setFriendList] = useState([])\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  const allInputs = { imgUrl: '' }\r\n  const [imageAsFile, setImageAsFile] = useState('')\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs)\r\n  const [profileImageUrl, setProfileImageUrl] = useState(\"\") \r\n  const [invalidate5, setInvalidate5] = useState(true) \r\n\r\n  useEffect(() => {\r\n    if(docId){\r\n        db.collection(\"users\").doc(docId).get().then((doc)=>{\r\n          if(doc.data().profileImage){\r\n            console.log(doc.data().profileImage)\r\n            setProfileImageUrl(doc.data().profileImage)\r\n          }\r\n        })\r\n        setInvalidate5(false)\r\n      }\r\n  }, [docId, invalidate5, imageAsUrl]);\r\n\r\n  useEffect(() => {\r\n    if (docId) {\r\n      db.collection(\"users\").doc(docId).get().then((doc) => {\r\n        if (doc.data().pendingFriends) {\r\n          setListPendingFriends(doc.data().pendingFriends)\r\n        }\r\n      })\r\n    }\r\n  }, [docId]);\r\n\r\n  useEffect(() => {\r\n    if (invalidate) {\r\n      db.collection(\"users\").where(\"uid\", \"==\", currentUser.uid)\r\n        .onSnapshot((snapShot) => {\r\n          snapShot.docs.map((doc) => setDocId(doc.id))\r\n          setInvalidate(false)\r\n        })\r\n    }\r\n  }, [invalidate]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\").doc(docId).update({\r\n      isOnline: true\r\n    })\r\n  }, [docId]);\r\n\r\n  useEffect(() => {\r\n    if (listPendingFriends) {\r\n      let newUserList = []\r\n      db.collection(\"users\").get().then((data) => {\r\n        data.docs.map((doc) => {\r\n          if (doc.data().uid != currentUser.uid && listPendingFriends.includes(doc.id)) {\r\n            newUserList.push({ id: doc.id, user: doc.data(), pending: true })\r\n          }\r\n          else if (doc.data().uid != currentUser.uid) {\r\n            newUserList.push({ id: doc.id, user: doc.data(), pending: false })\r\n          }\r\n        })\r\n        console.log(newUserList)\r\n        setUserList(newUserList)\r\n      })\r\n      setInvalidate2(false)\r\n    }\r\n  }, [listPendingFriends]);\r\n\r\n  useEffect(() => {\r\n    if (docId) {\r\n      db.collection(\"users\").doc(docId).get().then((doc) => {\r\n        if (doc.data().friendList) {\r\n          console.log(doc.data().friendList)\r\n          setFriendList(doc.data().friendList)\r\n        }\r\n      })\r\n      setInvalidate4(false)\r\n    }\r\n  }, [docId, invalidate4]);\r\n\r\n  const handleImageAsFile = (e) => {\r\n    const image = e.target.files[0]\r\n    setImageAsFile(imageAsFile => image)\r\n  }\r\n\r\n  const handleFirebaseUpload = (e) => {\r\n    e.preventDefault()\r\n    console.log(\"Start to upload\")\r\n    if (imageAsFile === '') {\r\n      console.log(`not an image, the image file is type of ${typeof (imageAsFile)}`)\r\n    }\r\n    const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile)\r\n    uploadTask.on(\"state_changed\", (snapShot) => {\r\n      console.log(snapShot)\r\n    }, (err) => {\r\n      console.log(err)\r\n    }, () => {\r\n      storage.ref('images').child(imageAsFile.name).getDownloadURL()\r\n        .then(fireBaseUrl => {\r\n          setImageAsUrl(prevObject => ({ ...prevObject, imgUrl: fireBaseUrl }))\r\n          db.collection(\"users\").doc(docId).update({\r\n            profileImage: fireBaseUrl\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          <strong>Profile Image: </strong>\r\n          <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-around\"}}>\r\n            <div>\r\n              <input type=\"file\" onChange={handleImageAsFile} />\r\n              <button onClick={handleFirebaseUpload}>Upload</button>\r\n            </div>\r\n            <div>\r\n              <img\r\n                  src={profileImageUrl}\r\n                  style={{\r\n                    width: 100,\r\n                    height: 100,\r\n                    borderRadius: 50,\r\n                    position: \"absolute\"\r\n                  }}\r\n                />\r\n            </div>\r\n          </div> \r\n\r\n          <br></br>\r\n          <br></br>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <strong>Email: </strong> {currentUser.email}\r\n          <br></br>\r\n          <strong>DisplayName: </strong> {currentUser.displayName}\r\n          <br></br>\r\n          <strong>FriendList: </strong>\r\n          <div className=\"pending-friend-list\">\r\n            {friendList && friendList.map((friendId) => {\r\n              return (\r\n                <Friend friendId={friendId} />\r\n              )\r\n            })}\r\n          </div>\r\n          {/* <strong>Friends List: {currentUser && currentUser.friendList.map((friend) => {\r\n            return (\r\n              <b>{friend.displayName}</b>\r\n            )\r\n          })}</strong>  */}\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 my-3\">Update Profile</Link>\r\n          <Link to=\"/chat\" className=\"btn btn-primary w-100 my-3\">Go to Messenger</Link>\r\n          <Link to=\"/todolist\" className=\"btn btn-primary w-100 my-3\">Go to TodoList</Link>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <div className=\"userlist\">\r\n        {userList && userList.map((user) => {\r\n          if (!friendList.includes(user.id)) {\r\n            return (\r\n              <User id={user.id} docId={docId} user={user.user} />\r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n      {/* <div className=\"w-100 text-center mt-2\"> \r\n        <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n",["135","136"],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\chat\\header\\header.js",["137"],"import React,{useState, useEffect} from 'react';\r\nimport './header.css'\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport {db} from \"../../../services/firebase\"\r\n\r\nconst Header = () => {\r\n  const [error, setError] = useState(\"\")\r\n  const {currentUser, logout} = useAuth()\r\n  const history = useHistory()\r\n  \r\n  const [docId, setDocId] = useState()\r\n  const [invalidate, setInvalidate] = useState(true)\r\n  \r\n  useEffect(() => {\r\n    if(invalidate){\r\n      db.collection(\"users\").where(\"uid\", \"==\", currentUser.uid)\r\n      .onSnapshot((snapShot)=>{\r\n        snapShot.docs.map((doc)=>setDocId(doc.id))\r\n        setInvalidate(false)\r\n      })\r\n    }\r\n  }, [invalidate]);\r\n\r\n  useEffect(() => {\r\n      db.collection(\"users\").doc(docId).update({\r\n        isOnline:true\r\n      })\r\n  }, [docId]);\r\n  \r\n  async function handleLogout(e){\r\n    setError('')\r\n\r\n    try{\r\n      await logout()\r\n      .then(() => {\r\n        db.collection(\"users\").doc(docId).update({\r\n          isOnline: false\r\n        })\r\n      })\r\n      await localStorage.clear()\r\n      history.push('/login')\r\n    }\r\n    catch{\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n  return (\r\n    <header className=\"header\">\r\n        <div style={{display: 'flex'}}>\r\n          <div className=\"logo\">Web Messenger</div>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {\r\n              !currentUser ? \r\n              <ul className=\"leftMenu\">\r\n                <li><Link to='/login'>Login</Link></li>\r\n                <li><Link to='/signup'>Sign up</Link></li>\r\n              </ul> : null\r\n            }     \r\n        </div>\r\n          <div style={{margin: '20px 0', color: '#fff', fontWeight: 'bold'}}>\r\n            {currentUser ? `Hi ${currentUser.displayName}` : ''}\r\n          </div>\r\n        <ul className=\"menu\">\r\n            {\r\n              currentUser ?\r\n              <li>\r\n                <Button onClick={handleLogout}>Logout</Button>\r\n            </li> : null\r\n            } \r\n        </ul>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",["138","139"],"D:\\ReactAuthFirebase\\react-auth\\src\\actions\\index.js",[],["140","141"],"D:\\ReactAuthFirebase\\react-auth\\src\\actions\\user.actions.js",["142","143","144","145","146","147","148","149","150"],"import {userConstants} from \"./constants\";\r\nimport {db} from \"../services/firebase\"\r\n\r\nexport const getRealTimeUsers = (uid) => {\r\n  return async (dispatch) => {\r\n    \r\n    dispatch({type: `${userConstants.GET_REALTIME_USERS}_REQUEST`})\r\n    const unsubscribe = db.collection(\"users\")\r\n    .onSnapshot((snapShot) => {\r\n      const users = []\r\n      snapShot.docs.map((doc) => {\r\n        if(doc.data().uid != uid){\r\n          users.push(doc.data())\r\n        }\r\n      })\r\n      dispatch({\r\n        type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n        payload: {users: users}        \r\n      })\r\n    })\r\n    return unsubscribe\r\n  }\r\n}\r\n\r\nexport const createMessage = (messageObject) =>{\r\n  return async (dispatch) => {\r\n    db.collection(\"conversations\").add({\r\n      ...messageObject,\r\n      isView: false,\r\n      createdAt: new Date()\r\n    })\r\n    .then((data) => {\r\n      // console.log(data)\r\n      //success\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const createMessageGroup = (messageObject) =>{\r\n  return async (dispatch) => {\r\n    db.collection(\"conversationsGroup\").add({\r\n      ...messageObject,\r\n      isView: false,\r\n      createdAt: new Date()\r\n    })\r\n    .then((data) => {\r\n      // console.log(data)\r\n      //success\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getRealTimeConversations = (user) =>{\r\n  return async (dispatch) => {\r\n    db.collection(\"conversations\")\r\n    .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n    .orderBy(\"createdAt\", \"asc\")\r\n    .onSnapshot((snapShot) => {\r\n      const conversations = []\r\n      //doc.data() -> vao 1 document\r\n      snapShot.docs.map((doc) => {\r\n        //nếu như conversation của 2 người match, 1 người là ng gửi và ng kia nhận được \r\n        // thì mới push vào conversation\r\n        if((doc.data().user_uid_1 == user.uid_1 && doc.data().user_uid_2 == user.uid_2)\r\n        ||\r\n        (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)){\r\n          conversations.push({id: doc.id, conver: doc.data()})\r\n        }\r\n\r\n        if(conversations.length > 0){\r\n          dispatch({\r\n            type: userConstants.GET_REALTIME_MESSAGES,\r\n            payload: { conversations }\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type: `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`,\r\n            payload: { conversations }\r\n          })\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getRealTimeConversationsGroups = (userGroups) => {\r\n  return async (dispatch) => {\r\n    db.collection(\"conversationsGroup\")\r\n      .where(\"conversationName\", \"==\", userGroups.conversationName)\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .onSnapshot((snapShot)=>{\r\n        const conversationsGroup = []\r\n        snapShot.docs.map((doc) => {\r\n          // console.log(doc.data())\r\n          if(userGroups.user_uids.includes(doc.data().sender)){\r\n            conversationsGroup.push({id: doc.id, conver: doc.data()})\r\n          }\r\n          if(conversationsGroup.length > 0){\r\n            dispatch({\r\n              type: userConstants.GET_REALTIME_MESSAGES_GROUP,\r\n              payload: { conversationsGroup }\r\n            })\r\n          }\r\n          else{\r\n            dispatch({\r\n              type: `${userConstants.GET_REALTIME_MESSAGES_GROUP}_FAILURE`,\r\n              payload: { conversationsGroup }\r\n            })\r\n          }\r\n        })\r\n        // console.log(userGroups.user_uids)\r\n        // console.log(conversationsGroup)\r\n      })\r\n  }\r\n}\r\n\r\nfunction arrayEquals(a, b) {\r\n  return Array.isArray(a) &&\r\n    Array.isArray(b) &&\r\n    a.length === b.length &&\r\n    a.every((val, index) => val === b[index]);\r\n}","D:\\ReactAuthFirebase\\react-auth\\src\\store\\index.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\actions\\auth.actions.js",["151"],"import {db} from \"../services/firebase\"\r\n\r\nexport const signup = (user) =>{\r\n  return (dispatch) =>{\r\n\r\n  }\r\n}","D:\\ReactAuthFirebase\\react-auth\\src\\index.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\contexts\\AuthContext.js",["152"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport { auth, db } from \"../../services/firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const signup = (email, password) => {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const login = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const logout = () => {\r\n    return auth.signOut()\r\n  }\r\n\r\n  const resetPassword = (email) =>{\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  const updateEmail = (email) =>{\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  const updatePassword = (password) =>{\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      // khi nào thấy change in authUser -> notify us\r\n      setCurrentUser(user) \r\n      setLoading(false)\r\n    })\r\n      //only run once\r\n    return unsubscribe\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return(\r\n    <AuthContext.Provider value = {value}>\r\n      {!loading && children}\r\n      {/* if we are not loading, we will render the children */}\r\n    </AuthContext.Provider>\r\n  )\r\n}","D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\ForgotPassword.js",["153","154","155"],"import React, {useRef, useState} from 'react';\r\nimport {Card, Form, Button, Alert} from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nconst ForgotPassword = () => {\r\n  const emailRef = useRef()\r\n  const {resetPassword} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [verified, setVerified] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault()\r\n\r\n    try{\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your email for further instructions\")\r\n    }\r\n    catch{\r\n      setError(\"Failed to reset password\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        {message && <Alert variant=\"success\">{message}t</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-3\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </div>\r\n\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n",["156","157"],"D:\\ReactAuthFirebase\\react-auth\\src\\reducers\\index.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\actions\\constants.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\App.js",["158","159","160","161","162"],"import React, { useState } from 'react';\nimport { AuthProvider } from './components/contexts/AuthContext';\nimport {Container} from 'react-bootstrap'\nimport Signup from './components/auth/Signup';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from './components/auth/Dashboard';\nimport Login from './components/auth/Login';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport UpdateProfile from './components/auth/UpdateProfile';\nimport TodoList from './components/todos';\nimport Header from \"./components/chat/header/header\"\nimport HomePage from './components/chat/HomePage';\nconst App = () => {\n  return (\n    <div \n      className=\"d-flex justify-content-center\"\n      style = {{minHeight:\"100vh\", height:\"auto\"}}\n    >\n      <div className=\"w-100\">\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute exact path = \"/\" component={Dashboard}/>\n            <PrivateRoute path = \"/update-profile\" component={UpdateProfile}/>\n            <PrivateRoute path = \"/chat\" component={HomePage}/>\n            <Route path=\"/signup\" component={Signup}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/todolist\" component={TodoList}/>\n            <Route path=\"/forgot-password\" component={ForgotPassword}/>\n\n          </Switch>\n        </AuthProvider>\n      </div>\n    </div>\n\n  )\n}\n\nexport default App;\n",["163","164"],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\Login.js",["165","166","167","168"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { db } from '../../services/firebase';\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login, currentUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [verified, setVerified] = useState(false)\r\n  const history = useHistory()\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      .then((data) => {\r\n        const name = data.user.displayName.split(\" \");\r\n        const firstName = name[0];\r\n        const lastName = name[1];\r\n\r\n        const loggedInUser = {\r\n            firstName,\r\n            lastName,\r\n            uid: data.user.uid,\r\n            email: data.user.email\r\n        }\r\n\r\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n      })\r\n\r\n      history.push(\"/\")\r\n    }\r\n    catch {\r\n      setError(\"Failed to login\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Log in</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {verified && <Alert variant=\"success\">A verification has been sent</Alert>}\r\n\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log in\r\n          </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\">Forgot Password</Link>\r\n          </div>\r\n\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\ReactAuthFirebase\\react-auth\\src\\components\\chat\\HomePage.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"D:\\ReactAuthFirebase\\react-auth\\src\\reducers\\auth.reducer.js",["194","195"],"import { authConstanst } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type){\r\n\r\n        case `${authConstanst.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated: false,\r\n                authenticating: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_SUCCESS`:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n\r\n    }\r\n    return state;\r\n}","D:\\ReactAuthFirebase\\react-auth\\src\\components\\todos\\Todo.js",[],["196","197"],"D:\\ReactAuthFirebase\\react-auth\\src\\services\\firebase.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\UpdateProfile.js",["198"],"import React, {useRef, useState} from 'react';\r\nimport {Card, Form, Button, Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nconst UpdateProfile = () => {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const {updatePassword, updateEmail, currentUser} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [verified, setVerified] = useState(false)\r\n  const history = useHistory()\r\n\r\n  //luôn set loading trước async function \r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n    setError(\"\")\r\n    if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n      return setError(\"Passwords do not match\")\r\n      //set the error only 1 time\r\n    }\r\n\r\n    const promises = [] //async\r\n    setLoading(true)\r\n    if(emailRef.current.value !== currentUser.email){\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n\r\n    if(passwordRef.current.value){\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }    \r\n\r\n    //promise all chỉ run .then() nếu all promises đã run xong và success\r\n    Promise.all(promises).then(()=>{\r\n      history.push('/')\r\n    }).catch(() => {\r\n      setError(\"Failed to update account\")\r\n    }).finally(() => { //run khi success or fail\r\n      setLoading(false)\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n        {currentUser && currentUser.email}\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        {verified && <Alert variant=\"success\">A verification has been sent</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"leave blank to keep the same\"></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"password-confirm\">\r\n            <Form.Label>Password Confirmation</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"leave blank to keep the same\"></Form.Control>\r\n          </Form.Group>\r\n          <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n            Update Profile\r\n          </Button>\r\n        </Form>\r\n\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n",["199","200"],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\auth\\Signup.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\components\\todos\\index.js",[],"D:\\ReactAuthFirebase\\react-auth\\src\\reducers\\user.reducer.js",["201","202"],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":44},{"ruleId":"207","severity":1,"message":"211","line":2,"column":17,"nodeType":"209","messageId":"210","endLine":2,"endColumn":23},{"ruleId":"207","severity":1,"message":"212","line":4,"column":16,"nodeType":"209","messageId":"210","endLine":4,"endColumn":26},{"ruleId":"207","severity":1,"message":"213","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":24,"column":6,"nodeType":"216","endLine":24,"endColumn":8,"suggestions":"217"},{"ruleId":"214","severity":1,"message":"215","line":32,"column":6,"nodeType":"216","endLine":32,"endColumn":8,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":54,"column":68,"nodeType":"221","messageId":"222","endLine":54,"endColumn":70},{"ruleId":"219","severity":1,"message":"220","line":58,"column":68,"nodeType":"221","messageId":"222","endLine":58,"endColumn":70},{"ruleId":"219","severity":1,"message":"220","line":65,"column":68,"nodeType":"221","messageId":"222","endLine":65,"endColumn":70},{"ruleId":"219","severity":1,"message":"220","line":69,"column":68,"nodeType":"221","messageId":"222","endLine":69,"endColumn":70},{"ruleId":"214","severity":1,"message":"223","line":129,"column":6,"nodeType":"216","endLine":129,"endColumn":8,"suggestions":"224"},{"ruleId":"207","severity":1,"message":"225","line":151,"column":17,"nodeType":"209","messageId":"210","endLine":151,"endColumn":25},{"ruleId":"207","severity":1,"message":"226","line":152,"column":24,"nodeType":"209","messageId":"210","endLine":152,"endColumn":30},{"ruleId":"207","severity":1,"message":"227","line":156,"column":10,"nodeType":"209","messageId":"210","endLine":156,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":157,"column":10,"nodeType":"209","messageId":"210","endLine":157,"endColumn":21},{"ruleId":"207","severity":1,"message":"229","line":157,"column":23,"nodeType":"209","messageId":"210","endLine":157,"endColumn":37},{"ruleId":"207","severity":1,"message":"230","line":161,"column":10,"nodeType":"209","messageId":"210","endLine":161,"endColumn":22},{"ruleId":"207","severity":1,"message":"231","line":161,"column":24,"nodeType":"209","messageId":"210","endLine":161,"endColumn":39},{"ruleId":"214","severity":1,"message":"232","line":199,"column":6,"nodeType":"216","endLine":199,"endColumn":18,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":211,"column":29,"nodeType":"236","messageId":"237","endLine":211,"endColumn":31},{"ruleId":"219","severity":1,"message":"220","line":212,"column":30,"nodeType":"221","messageId":"222","endLine":212,"endColumn":32},{"ruleId":"219","severity":1,"message":"220","line":215,"column":35,"nodeType":"221","messageId":"222","endLine":215,"endColumn":37},{"ruleId":"214","severity":1,"message":"232","line":224,"column":6,"nodeType":"216","endLine":224,"endColumn":26,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":278,"column":15,"nodeType":"241","endLine":286,"endColumn":19},{"ruleId":"234","severity":1,"message":"242","line":317,"column":42,"nodeType":"236","messageId":"243","endLine":317,"endColumn":44},{"ruleId":"203","replacedBy":"244"},{"ruleId":"205","replacedBy":"245"},{"ruleId":"214","severity":1,"message":"232","line":24,"column":6,"nodeType":"216","endLine":24,"endColumn":18,"suggestions":"246"},{"ruleId":"203","replacedBy":"247"},{"ruleId":"205","replacedBy":"248"},{"ruleId":"203","replacedBy":"249"},{"ruleId":"205","replacedBy":"250"},{"ruleId":"234","severity":1,"message":"235","line":11,"column":31,"nodeType":"236","messageId":"237","endLine":11,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":12,"column":27,"nodeType":"221","messageId":"222","endLine":12,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":67,"column":31,"nodeType":"236","messageId":"237","endLine":67,"endColumn":33},{"ruleId":"219","severity":1,"message":"251","line":70,"column":35,"nodeType":"221","messageId":"222","endLine":70,"endColumn":37},{"ruleId":"219","severity":1,"message":"251","line":70,"column":74,"nodeType":"221","messageId":"222","endLine":70,"endColumn":76},{"ruleId":"219","severity":1,"message":"251","line":72,"column":32,"nodeType":"221","messageId":"222","endLine":72,"endColumn":34},{"ruleId":"219","severity":1,"message":"251","line":72,"column":71,"nodeType":"221","messageId":"222","endLine":72,"endColumn":73},{"ruleId":"234","severity":1,"message":"235","line":100,"column":33,"nodeType":"236","messageId":"237","endLine":100,"endColumn":35},{"ruleId":"207","severity":1,"message":"252","line":124,"column":10,"nodeType":"209","messageId":"210","endLine":124,"endColumn":21},{"ruleId":"207","severity":1,"message":"253","line":1,"column":9,"nodeType":"209","messageId":"210","endLine":1,"endColumn":11},{"ruleId":"207","severity":1,"message":"253","line":2,"column":16,"nodeType":"209","messageId":"210","endLine":2,"endColumn":18},{"ruleId":"207","severity":1,"message":"212","line":4,"column":15,"nodeType":"209","messageId":"210","endLine":4,"endColumn":25},{"ruleId":"207","severity":1,"message":"254","line":11,"column":10,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"255","line":11,"column":20,"nodeType":"209","messageId":"210","endLine":11,"endColumn":31},{"ruleId":"203","replacedBy":"256"},{"ruleId":"205","replacedBy":"257"},{"ruleId":"207","severity":1,"message":"258","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"259","line":3,"column":9,"nodeType":"209","messageId":"210","endLine":3,"endColumn":18},{"ruleId":"207","severity":1,"message":"260","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":16},{"ruleId":"207","severity":1,"message":"261","line":5,"column":33,"nodeType":"209","messageId":"210","endLine":5,"endColumn":41},{"ruleId":"207","severity":1,"message":"262","line":12,"column":8,"nodeType":"209","messageId":"210","endLine":12,"endColumn":14},{"ruleId":"203","replacedBy":"263"},{"ruleId":"205","replacedBy":"264"},{"ruleId":"207","severity":1,"message":"265","line":1,"column":35,"nodeType":"209","messageId":"210","endLine":1,"endColumn":44},{"ruleId":"207","severity":1,"message":"253","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":12},{"ruleId":"207","severity":1,"message":"266","line":10,"column":18,"nodeType":"209","messageId":"210","endLine":10,"endColumn":29},{"ruleId":"207","severity":1,"message":"255","line":13,"column":20,"nodeType":"209","messageId":"210","endLine":13,"endColumn":31},{"ruleId":"207","severity":1,"message":"267","line":2,"column":18,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"207","severity":1,"message":"268","line":2,"column":28,"nodeType":"209","messageId":"210","endLine":2,"endColumn":42},{"ruleId":"207","severity":1,"message":"213","line":12,"column":10,"nodeType":"209","messageId":"210","endLine":12,"endColumn":18},{"ruleId":"207","severity":1,"message":"269","line":14,"column":8,"nodeType":"209","messageId":"210","endLine":14,"endColumn":16},{"ruleId":"207","severity":1,"message":"270","line":60,"column":39,"nodeType":"209","messageId":"210","endLine":60,"endColumn":49},{"ruleId":"207","severity":1,"message":"271","line":60,"column":51,"nodeType":"209","messageId":"210","endLine":60,"endColumn":53},{"ruleId":"207","severity":1,"message":"272","line":61,"column":27,"nodeType":"209","messageId":"210","endLine":61,"endColumn":45},{"ruleId":"207","severity":1,"message":"273","line":62,"column":10,"nodeType":"209","messageId":"210","endLine":62,"endColumn":21},{"ruleId":"207","severity":1,"message":"274","line":62,"column":23,"nodeType":"209","messageId":"210","endLine":62,"endColumn":37},{"ruleId":"207","severity":1,"message":"275","line":101,"column":10,"nodeType":"209","messageId":"210","endLine":101,"endColumn":21},{"ruleId":"207","severity":1,"message":"276","line":113,"column":25,"nodeType":"209","messageId":"210","endLine":113,"endColumn":41},{"ruleId":"214","severity":1,"message":"232","line":136,"column":6,"nodeType":"216","endLine":136,"endColumn":19,"suggestions":"277"},{"ruleId":"234","severity":1,"message":"235","line":153,"column":27,"nodeType":"236","messageId":"237","endLine":153,"endColumn":29},{"ruleId":"214","severity":1,"message":"278","line":184,"column":6,"nodeType":"216","endLine":184,"endColumn":18,"suggestions":"279"},{"ruleId":"234","severity":1,"message":"235","line":189,"column":27,"nodeType":"236","messageId":"237","endLine":189,"endColumn":29},{"ruleId":"234","severity":1,"message":"242","line":390,"column":44,"nodeType":"236","messageId":"243","endLine":390,"endColumn":46},{"ruleId":"234","severity":1,"message":"242","line":476,"column":43,"nodeType":"236","messageId":"243","endLine":476,"endColumn":45},{"ruleId":"219","severity":1,"message":"251","line":499,"column":71,"nodeType":"221","messageId":"222","endLine":499,"endColumn":73},{"ruleId":"219","severity":1,"message":"251","line":501,"column":50,"nodeType":"221","messageId":"222","endLine":501,"endColumn":52},{"ruleId":"219","severity":1,"message":"251","line":505,"column":72,"nodeType":"221","messageId":"222","endLine":505,"endColumn":74},{"ruleId":"219","severity":1,"message":"251","line":518,"column":72,"nodeType":"221","messageId":"222","endLine":518,"endColumn":74},{"ruleId":"219","severity":1,"message":"251","line":536,"column":69,"nodeType":"221","messageId":"222","endLine":536,"endColumn":71},{"ruleId":"219","severity":1,"message":"251","line":538,"column":48,"nodeType":"221","messageId":"222","endLine":538,"endColumn":50},{"ruleId":"219","severity":1,"message":"251","line":544,"column":72,"nodeType":"221","messageId":"222","endLine":544,"endColumn":74},{"ruleId":"219","severity":1,"message":"251","line":567,"column":72,"nodeType":"221","messageId":"222","endLine":567,"endColumn":74},{"ruleId":"280","severity":1,"message":"281","line":12,"column":1,"nodeType":"282","endLine":53,"endColumn":2},{"ruleId":"283","severity":1,"message":"284","line":13,"column":5,"nodeType":"285","messageId":"286","endLine":51,"endColumn":6},{"ruleId":"203","replacedBy":"287"},{"ruleId":"205","replacedBy":"288"},{"ruleId":"207","severity":1,"message":"255","line":13,"column":20,"nodeType":"209","messageId":"210","endLine":13,"endColumn":31},{"ruleId":"203","replacedBy":"289"},{"ruleId":"205","replacedBy":"290"},{"ruleId":"280","severity":1,"message":"281","line":7,"column":1,"nodeType":"282","endLine":46,"endColumn":2},{"ruleId":"283","severity":1,"message":"284","line":8,"column":3,"nodeType":"285","messageId":"286","endLine":43,"endColumn":4},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useHistory' is defined but never used.","'faCoffee' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'docId'. Either include it or remove the dependency array.","ArrayExpression",["293"],["294"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'friendId'. Either include it or remove the dependency array.",["295"],"'setError' is assigned a value but never used.","'logout' is assigned a value but never used.","'invalidate2' is assigned a value but never used.","'invalidate3' is assigned a value but never used.","'setInvalidate3' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["296"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["297"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["291"],["292"],["298"],["291"],["292"],["291"],["292"],"Expected '===' and instead saw '=='.","'arrayEquals' is defined but never used.","'db' is defined but never used.","'verified' is assigned a value but never used.","'setVerified' is assigned a value but never used.",["291"],["292"],"'useState' is defined but never used.","'Container' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'Header' is defined but never used.",["291"],["292"],"'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'firebase' is defined but never used.","'userDocIds' is assigned a value but never used.","'id' is assigned a value but never used.","'setProfileImageUrl' is assigned a value but never used.","'invalidate5' is assigned a value but never used.","'setInvalidate5' is assigned a value but never used.","'chosenEmoji' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.",["299"],"React Hook useEffect has missing dependencies: 'currentUser.uid' and 'dispatch'. Either include them or remove the dependency array.",["300"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["291"],["292"],["291"],["292"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"306","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [docId]",{"range":"315","text":"316"},{"range":"317","text":"316"},"Update the dependencies array to be: [friendId]",{"range":"318","text":"319"},"Update the dependencies array to be: [currentUser.uid, invalidate]",{"range":"320","text":"321"},"Update the dependencies array to be: [currentUser.uid, listPendingFriends]",{"range":"322","text":"323"},{"range":"324","text":"321"},"Update the dependencies array to be: [currentUser.uid, invalidate2]",{"range":"325","text":"326"},"Update the dependencies array to be: [currentUser.uid, dispatch, invalidate]",{"range":"327","text":"328"},[934,936],"[docId]",[1126,1128],[4114,4116],"[friendId]",[6316,6328],"[currentUser.uid, invalidate]",[7082,7102],"[currentUser.uid, listPendingFriends]",[769,781],[5383,5396],"[currentUser.uid, invalidate2]",[6729,6741],"[currentUser.uid, dispatch, invalidate]"]